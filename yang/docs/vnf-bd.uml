'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/vnf-bd.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title vnf-bd 
note top of vnf_bd_vnf_bd : <b>Namespace: </b> urn:ietf:params:xml:ns:yang:vnf-bd \n<b>Prefix: </b> vnf-bd \n<b>Organization : </b>\nIETF/BMWG \n<b>Contact : </b>\nRaphael Vicente Rosa <raphaelvrosa@gmail.com>, \nManuel Peuster <peuster@mail.uni-paderborn.de> \n<b>Revision : </b> 2020-10-08 \n
package "vnf-bd:vnf-bd" as vnf_bd_vnf_bd { 
class "vnf-bd" as vnf_bd << (M, #33CCFF) module>> 
enum "workflows" as vnf_bd_I_workflows {
create
configure
start
MORE
}
class "node_requirements" as vnf_bd_I_node_requirements_grouping <<(G,Lime) grouping>> 
class "resources" as  vnf_bd_I_node_requirements_I_resources <<container>> 
vnf_bd_I_node_requirements_grouping *-- "1" vnf_bd_I_node_requirements_I_resources 
class "cpu" as  vnf_bd_I_node_requirements_I_resources_I_cpu <<container>> 
vnf_bd_I_node_requirements_I_resources *-- "1" vnf_bd_I_node_requirements_I_resources_I_cpu 
vnf_bd_I_node_requirements_I_resources_I_cpu : vcpus : uint32  
vnf_bd_I_node_requirements_I_resources_I_cpu : cpu_bw : string  
vnf_bd_I_node_requirements_I_resources_I_cpu : pinning : string  
class "memory" as  vnf_bd_I_node_requirements_I_resources_I_memory <<container>> 
vnf_bd_I_node_requirements_I_resources *-- "1" vnf_bd_I_node_requirements_I_resources_I_memory 
vnf_bd_I_node_requirements_I_resources_I_memory : size : uint32  
vnf_bd_I_node_requirements_I_resources_I_memory : unit : string  
class "storage" as  vnf_bd_I_node_requirements_I_resources_I_storage <<container>> 
vnf_bd_I_node_requirements_I_resources *-- "1" vnf_bd_I_node_requirements_I_resources_I_storage 
vnf_bd_I_node_requirements_I_resources_I_storage : size : uint32  
vnf_bd_I_node_requirements_I_resources_I_storage : unit : string  
vnf_bd_I_node_requirements_I_resources_I_storage : volumes : string  
class "connection_points" as vnf_bd_I_connection_points_grouping <<(G,Lime) grouping>> 
vnf_bd_I_connection_points_grouping : id : string  
vnf_bd_I_connection_points_grouping : interface : string  
vnf_bd_I_connection_points_grouping : type : string  
vnf_bd_I_connection_points_grouping : address : string  
class "nodes" as vnf_bd_I_nodes_grouping <<(G,Lime) grouping>> 
vnf_bd_I_nodes_grouping : id : string  
vnf_bd_I_nodes_grouping : type : string  
vnf_bd_I_nodes_grouping : image : string  
vnf_bd_I_nodes_grouping : format : string  
vnf_bd_I_nodes_grouping : role : string  
vnf_bd_I_nodes_grouping : node_requirements {uses} 
class "connection_points" as vnf_bd_I_nodes_I_connection_points << (L, #FF7700) list>> 
vnf_bd_I_nodes_grouping *-- "0..N" vnf_bd_I_nodes_I_connection_points 
vnf_bd_I_nodes_I_connection_points : connection_points {uses} 
class "relationships" as vnf_bd_I_nodes_I_relationships << (L, #FF7700) list>> 
vnf_bd_I_nodes_grouping *-- "0..N" vnf_bd_I_nodes_I_relationships 
vnf_bd_I_nodes_I_relationships : +name : string  {key} 
vnf_bd_I_nodes_I_relationships : type : string  
vnf_bd_I_nodes_I_relationships : target : string  
class "lifecycle" as vnf_bd_I_nodes_I_lifecycle << (L, #FF7700) list>> 
vnf_bd_I_nodes_grouping *-- "0..N" vnf_bd_I_nodes_I_lifecycle 
vnf_bd_I_nodes_I_lifecycle : +workflow : workflows  {key} 
vnf_bd_I_nodes_I_lifecycle : name : string  
class "parameters" as vnf_bd_I_nodes_I_lifecycle_I_parameters << (L, #FF7700) list>> 
vnf_bd_I_nodes_I_lifecycle *-- "0..N" vnf_bd_I_nodes_I_lifecycle_I_parameters 
vnf_bd_I_nodes_I_lifecycle_I_parameters : +input : string  {key} 
vnf_bd_I_nodes_I_lifecycle_I_parameters : value : string  
vnf_bd_I_nodes_I_lifecycle : implementation []: string 
class "link" as vnf_bd_I_link_grouping <<(G,Lime) grouping>> 
vnf_bd_I_link_grouping : id : string  
vnf_bd_I_link_grouping : name : string  
vnf_bd_I_link_grouping : type : string  
vnf_bd_I_link_grouping : network : string  
vnf_bd_I_link_grouping : connection_points []: leafref : ../../nodes/connection_points/id 
class "scenario" as vnf_bd_I_scenario_grouping <<(G,Lime) grouping>> 
class "nodes" as vnf_bd_I_scenario_I_nodes << (L, #FF7700) list>> 
vnf_bd_I_scenario_grouping *-- "0..N" vnf_bd_I_scenario_I_nodes 
vnf_bd_I_scenario_I_nodes : nodes {uses} 
class "links" as vnf_bd_I_scenario_I_links << (L, #FF7700) list>> 
vnf_bd_I_scenario_grouping *-- "0..N" vnf_bd_I_scenario_I_links 
vnf_bd_I_scenario_I_links : link {uses} 
class "policies" as vnf_bd_I_scenario_I_policies << (L, #FF7700) list>> 
vnf_bd_I_scenario_grouping *-- "0..N" vnf_bd_I_scenario_I_policies 
vnf_bd_I_scenario_I_policies : +name : string  {key} 
vnf_bd_I_scenario_I_policies : type : string  
vnf_bd_I_scenario_I_policies : targets : string  
vnf_bd_I_scenario_I_policies : action : string  
class "tool" as vnf_bd_I_tool_grouping <<(G,Lime) grouping>> 
vnf_bd_I_tool_grouping : id : uint32  
vnf_bd_I_tool_grouping : instances : uint32  
vnf_bd_I_tool_grouping : +name : string  {key} 
class "parameters" as vnf_bd_I_tool_I_parameters << (L, #FF7700) list>> 
vnf_bd_I_tool_grouping *-- "0..N" vnf_bd_I_tool_I_parameters 
vnf_bd_I_tool_I_parameters : +input : string  {key} 
vnf_bd_I_tool_I_parameters : value : string  
class "sched" as  vnf_bd_I_tool_I_sched <<container>> 
vnf_bd_I_tool_grouping *-- "1" vnf_bd_I_tool_I_sched 
vnf_bd_I_tool_I_sched : from : uint32   = 0 
vnf_bd_I_tool_I_sched : until : uint32  
vnf_bd_I_tool_I_sched : duration : uint32  
vnf_bd_I_tool_I_sched : interval : uint32  
vnf_bd_I_tool_I_sched : repeat : uint32  
class "component" as vnf_bd_I_component_grouping <<(G,Lime) grouping>> 
vnf_bd_I_component_grouping : uuid : string  
vnf_bd_I_component_grouping : name : string  
class "agent" as vnf_bd_I_agent_grouping <<(G,Lime) grouping>> 
vnf_bd_I_agent_grouping : component {uses} 
class "probers" as vnf_bd_I_agent_I_probers << (L, #FF7700) list>> 
vnf_bd_I_agent_grouping *-- "0..N" vnf_bd_I_agent_I_probers 
vnf_bd_I_agent_I_probers : tool {uses} 
class "monitor" as vnf_bd_I_monitor_grouping <<(G,Lime) grouping>> 
vnf_bd_I_monitor_grouping : component {uses} 
class "listeners" as vnf_bd_I_monitor_I_listeners << (L, #FF7700) list>> 
vnf_bd_I_monitor_grouping *-- "0..N" vnf_bd_I_monitor_I_listeners 
vnf_bd_I_monitor_I_listeners : tool {uses} 
class "proceedings" as vnf_bd_I_proceedings_grouping <<(G,Lime) grouping>> 
class "agents" as vnf_bd_I_proceedings_I_agents << (L, #FF7700) list>> 
vnf_bd_I_proceedings_grouping *-- "0..N" vnf_bd_I_proceedings_I_agents 
vnf_bd_I_proceedings_I_agents : agent {uses} 
class "monitors" as vnf_bd_I_proceedings_I_monitors << (L, #FF7700) list>> 
vnf_bd_I_proceedings_grouping *-- "0..N" vnf_bd_I_proceedings_I_monitors 
vnf_bd_I_proceedings_I_monitors : monitor {uses} 
class "header" as vnf_bd_I_header_grouping <<(G,Lime) grouping>> 
vnf_bd_I_header_grouping : id : string  
vnf_bd_I_header_grouping : name : string  
vnf_bd_I_header_grouping : version : string  
vnf_bd_I_header_grouping : description : string  
vnf_bd_I_header_grouping : timestamp : string  
class "vnf-bd" as vnf_bd_I_vnf_bd_grouping <<(G,Lime) grouping>> 
vnf_bd_I_vnf_bd_grouping : header {uses} 
class "experiments" as  vnf_bd_I_vnf_bd_I_experiments <<container>> 
vnf_bd_I_vnf_bd_grouping *-- "1" vnf_bd_I_vnf_bd_I_experiments 
vnf_bd_I_vnf_bd_I_experiments : trials : uint32   = 1 
vnf_bd_I_vnf_bd_I_experiments : tests : uint32   = 1 
class "scenario" as  vnf_bd_I_vnf_bd_I_scenario <<container>> 
vnf_bd_I_vnf_bd_grouping *-- "1" vnf_bd_I_vnf_bd_I_scenario 
vnf_bd_I_vnf_bd_I_scenario : scenario {uses} 
class "proceedings" as  vnf_bd_I_vnf_bd_I_proceedings <<container>> 
vnf_bd_I_vnf_bd_grouping *-- "1" vnf_bd_I_vnf_bd_I_proceedings 
vnf_bd_I_vnf_bd_I_proceedings : proceedings {uses} 
} 

vnf_bd_I_nodes_grouping --> vnf_bd_I_node_requirements_grouping : uses 
vnf_bd_I_nodes_I_connection_points --> vnf_bd_I_connection_points_grouping : uses 
vnf_bd_I_scenario_I_nodes --> vnf_bd_I_nodes_grouping : uses 
vnf_bd_I_scenario_I_links --> vnf_bd_I_link_grouping : uses 
vnf_bd_I_agent_grouping --> vnf_bd_I_component_grouping : uses 
vnf_bd_I_agent_I_probers --> vnf_bd_I_tool_grouping : uses 
vnf_bd_I_monitor_grouping --> vnf_bd_I_component_grouping : uses 
vnf_bd_I_monitor_I_listeners --> vnf_bd_I_tool_grouping : uses 
vnf_bd_I_proceedings_I_agents --> vnf_bd_I_agent_grouping : uses 
vnf_bd_I_proceedings_I_monitors --> vnf_bd_I_monitor_grouping : uses 
vnf_bd_I_vnf_bd_grouping --> vnf_bd_I_header_grouping : uses 
vnf_bd_I_vnf_bd_I_scenario --> vnf_bd_I_scenario_grouping : uses 
vnf_bd_I_vnf_bd_I_proceedings --> vnf_bd_I_proceedings_grouping : uses 
center footer
 <size:20> UML Generated : 2020-10-08 16:54 </size>
 endfooter 
@enduml 
